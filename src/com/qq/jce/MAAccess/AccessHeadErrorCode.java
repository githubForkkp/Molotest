// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.34 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/noahyang/you.jce'
// **********************************************************************

package com.qq.jce.MAAccess;

public final class AccessHeadErrorCode implements java.io.Serializable
{
    private static AccessHeadErrorCode[] __values = new AccessHeadErrorCode[6];
    private int __value;
    private String __T = new String();

    public static final int _AEC_INVALID_CMD = -1;
    public static final AccessHeadErrorCode AEC_INVALID_CMD = new AccessHeadErrorCode(0,_AEC_INVALID_CMD,"AEC_INVALID_CMD");
    public static final int _AEC_INVALID_BUSINESS_ID = -2;
    public static final AccessHeadErrorCode AEC_INVALID_BUSINESS_ID = new AccessHeadErrorCode(1,_AEC_INVALID_BUSINESS_ID,"AEC_INVALID_BUSINESS_ID");
    public static final int _AEC_ACCESS_CONTROL_FAILED = -4;
    public static final AccessHeadErrorCode AEC_ACCESS_CONTROL_FAILED = new AccessHeadErrorCode(2,_AEC_ACCESS_CONTROL_FAILED,"AEC_ACCESS_CONTROL_FAILED");
    public static final int _AEC_SERVER_INTERNAL_ERROR = -10;
    public static final AccessHeadErrorCode AEC_SERVER_INTERNAL_ERROR = new AccessHeadErrorCode(3,_AEC_SERVER_INTERNAL_ERROR,"AEC_SERVER_INTERNAL_ERROR");
    public static final int _AEC_BUSINESS_ERROR = -11;
    public static final AccessHeadErrorCode AEC_BUSINESS_ERROR = new AccessHeadErrorCode(4,_AEC_BUSINESS_ERROR,"AEC_BUSINESS_ERROR");
    public static final int _AEC_BUSINESS_FREQUENCY_LIMIT = -12;
    public static final AccessHeadErrorCode AEC_BUSINESS_FREQUENCY_LIMIT = new AccessHeadErrorCode(5,_AEC_BUSINESS_FREQUENCY_LIMIT,"AEC_BUSINESS_FREQUENCY_LIMIT");

    public static AccessHeadErrorCode convert(int val)
    {
        for(int __i = 0; __i < __values.length; ++__i)
        {
            if(__values[__i].value() == val)
            {
                return __values[__i];
            }
        }
        assert false;
        return null;
    }

    public static AccessHeadErrorCode convert(String val)
    {
        for(int __i = 0; __i < __values.length; ++__i)
        {
            if(__values[__i].toString().equals(val))
            {
                return __values[__i];
            }
        }
        assert false;
        return null;
    }

    public int value()
    {
        return __value;
    }

    public String toString()
    {
        return __T;
    }

    private AccessHeadErrorCode(int index, int val, String s)
    {
        __T = s;
        __value = val;
        __values[index] = this;
    }

}
