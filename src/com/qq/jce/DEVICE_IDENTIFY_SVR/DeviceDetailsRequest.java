// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.34 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/noahyang/deviceIdentify.jce'
// **********************************************************************

package com.qq.jce.DEVICE_IDENTIFY_SVR;

public final class DeviceDetailsRequest extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "DEVICE_IDENTIFY_SVR.DeviceDetailsRequest";
    }

    public String fullClassName()
    {
        return "com.qq.jce.DEVICE_IDENTIFY_SVR.DeviceDetailsRequest";
    }

    public String sPCID = "";

    public java.util.Map<String, String> mDeviceInfos = null;

    public String getSPCID()
    {
        return sPCID;
    }

    public void  setSPCID(String sPCID)
    {
        this.sPCID = sPCID;
    }

    public java.util.Map<String, String> getMDeviceInfos()
    {
        return mDeviceInfos;
    }

    public void  setMDeviceInfos(java.util.Map<String, String> mDeviceInfos)
    {
        this.mDeviceInfos = mDeviceInfos;
    }

    public DeviceDetailsRequest()
    {
    }

    public DeviceDetailsRequest(String sPCID, java.util.Map<String, String> mDeviceInfos)
    {
        this.sPCID = sPCID;
        this.mDeviceInfos = mDeviceInfos;
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        DeviceDetailsRequest t = (DeviceDetailsRequest) o;
        return (
            com.qq.taf.jce.JceUtil.equals(sPCID, t.sPCID) && 
            com.qq.taf.jce.JceUtil.equals(mDeviceInfos, t.mDeviceInfos) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(sPCID, 0);
        _os.write(mDeviceInfos, 1);
    }

    static java.util.Map<String, String> cache_mDeviceInfos;

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        this.sPCID =  _is.readString(0, true);
        if(null == cache_mDeviceInfos)
        {
            cache_mDeviceInfos = new java.util.HashMap<String, String>();
            String __var_5 = "";
            String __var_6 = "";
            cache_mDeviceInfos.put(__var_5, __var_6);
        }
        this.mDeviceInfos = (java.util.Map<String, String>) _is.read(cache_mDeviceInfos, 1, true);
    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(sPCID, "sPCID");
        _ds.display(mDeviceInfos, "mDeviceInfos");
    }

    public void displaySimple(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.displaySimple(sPCID, true);
        _ds.displaySimple(mDeviceInfos, false);
    }

}

