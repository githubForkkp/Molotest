// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.34 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/noahyang/mainProgram.jce'
// **********************************************************************

package com.qq.jce.WCS;

public final class QueryClientComponentInfoResponse extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "WCS.QueryClientComponentInfoResponse";
    }

    public String fullClassName()
    {
        return "com.qq.jce.WCS.QueryClientComponentInfoResponse";
    }

    public int eResultCode = 0;

    public String sDownloadUrl = "";

    public String sMd5 = "";

    public long lReleaseTime = 0;

    public int getEResultCode()
    {
        return eResultCode;
    }

    public void  setEResultCode(int eResultCode)
    {
        this.eResultCode = eResultCode;
    }

    public String getSDownloadUrl()
    {
        return sDownloadUrl;
    }

    public void  setSDownloadUrl(String sDownloadUrl)
    {
        this.sDownloadUrl = sDownloadUrl;
    }

    public String getSMd5()
    {
        return sMd5;
    }

    public void  setSMd5(String sMd5)
    {
        this.sMd5 = sMd5;
    }

    public long getLReleaseTime()
    {
        return lReleaseTime;
    }

    public void  setLReleaseTime(long lReleaseTime)
    {
        this.lReleaseTime = lReleaseTime;
    }

    public QueryClientComponentInfoResponse()
    {
    }

    public QueryClientComponentInfoResponse(int eResultCode, String sDownloadUrl, String sMd5, long lReleaseTime)
    {
        this.eResultCode = eResultCode;
        this.sDownloadUrl = sDownloadUrl;
        this.sMd5 = sMd5;
        this.lReleaseTime = lReleaseTime;
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        QueryClientComponentInfoResponse t = (QueryClientComponentInfoResponse) o;
        return (
            com.qq.taf.jce.JceUtil.equals(eResultCode, t.eResultCode) && 
            com.qq.taf.jce.JceUtil.equals(sDownloadUrl, t.sDownloadUrl) && 
            com.qq.taf.jce.JceUtil.equals(sMd5, t.sMd5) && 
            com.qq.taf.jce.JceUtil.equals(lReleaseTime, t.lReleaseTime) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(eResultCode, 0);
        _os.write(sDownloadUrl, 1);
        _os.write(sMd5, 2);
        _os.write(lReleaseTime, 3);
    }

    static int cache_eResultCode;

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        this.eResultCode = (int) _is.read(eResultCode, 0, true);
        this.sDownloadUrl =  _is.readString(1, true);
        this.sMd5 =  _is.readString(2, true);
        this.lReleaseTime = (long) _is.read(lReleaseTime, 3, false);
    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(eResultCode, "eResultCode");
        _ds.display(sDownloadUrl, "sDownloadUrl");
        _ds.display(sMd5, "sMd5");
        _ds.display(lReleaseTime, "lReleaseTime");
    }

    public void displaySimple(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.displaySimple(eResultCode, true);
        _ds.displaySimple(sDownloadUrl, true);
        _ds.displaySimple(sMd5, true);
        _ds.displaySimple(lReleaseTime, false);
    }

}

