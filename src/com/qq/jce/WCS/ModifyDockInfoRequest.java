// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.34 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/noahyang/dock.jce'
// **********************************************************************

package com.qq.jce.WCS;

public final class ModifyDockInfoRequest extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "WCS.ModifyDockInfoRequest";
    }

    public String fullClassName()
    {
        return "com.qq.jce.WCS.ModifyDockInfoRequest";
    }

    public com.qq.jce.WCS.AdminRequest stAdminRequestInfo = null;

    public java.util.Map<String, java.util.ArrayList<String>> mapUnit = null;

    public java.util.ArrayList<com.qq.jce.WCS.DockInfoElem> vecInfos = null;

    public long lReleaseTime = 0;

    public long lUpdateLimit = 0;

    public int nEnablePeriod = 0;

    public int eDockInfoStatus = 0;

    public String sDockDesc = "";

    public String sDockInvalidDesc = "";

    public boolean bRollBack = false;

    public String sTargetVersion = "";

    public com.qq.jce.WCS.AdminRequest getStAdminRequestInfo()
    {
        return stAdminRequestInfo;
    }

    public void  setStAdminRequestInfo(com.qq.jce.WCS.AdminRequest stAdminRequestInfo)
    {
        this.stAdminRequestInfo = stAdminRequestInfo;
    }

    public java.util.Map<String, java.util.ArrayList<String>> getMapUnit()
    {
        return mapUnit;
    }

    public void  setMapUnit(java.util.Map<String, java.util.ArrayList<String>> mapUnit)
    {
        this.mapUnit = mapUnit;
    }

    public java.util.ArrayList<com.qq.jce.WCS.DockInfoElem> getVecInfos()
    {
        return vecInfos;
    }

    public void  setVecInfos(java.util.ArrayList<com.qq.jce.WCS.DockInfoElem> vecInfos)
    {
        this.vecInfos = vecInfos;
    }

    public long getLReleaseTime()
    {
        return lReleaseTime;
    }

    public void  setLReleaseTime(long lReleaseTime)
    {
        this.lReleaseTime = lReleaseTime;
    }

    public long getLUpdateLimit()
    {
        return lUpdateLimit;
    }

    public void  setLUpdateLimit(long lUpdateLimit)
    {
        this.lUpdateLimit = lUpdateLimit;
    }

    public int getNEnablePeriod()
    {
        return nEnablePeriod;
    }

    public void  setNEnablePeriod(int nEnablePeriod)
    {
        this.nEnablePeriod = nEnablePeriod;
    }

    public int getEDockInfoStatus()
    {
        return eDockInfoStatus;
    }

    public void  setEDockInfoStatus(int eDockInfoStatus)
    {
        this.eDockInfoStatus = eDockInfoStatus;
    }

    public String getSDockDesc()
    {
        return sDockDesc;
    }

    public void  setSDockDesc(String sDockDesc)
    {
        this.sDockDesc = sDockDesc;
    }

    public String getSDockInvalidDesc()
    {
        return sDockInvalidDesc;
    }

    public void  setSDockInvalidDesc(String sDockInvalidDesc)
    {
        this.sDockInvalidDesc = sDockInvalidDesc;
    }

    public boolean getBRollBack()
    {
        return bRollBack;
    }

    public void  setBRollBack(boolean bRollBack)
    {
        this.bRollBack = bRollBack;
    }

    public String getSTargetVersion()
    {
        return sTargetVersion;
    }

    public void  setSTargetVersion(String sTargetVersion)
    {
        this.sTargetVersion = sTargetVersion;
    }

    public ModifyDockInfoRequest()
    {
    }

    public ModifyDockInfoRequest(com.qq.jce.WCS.AdminRequest stAdminRequestInfo, java.util.Map<String, java.util.ArrayList<String>> mapUnit, java.util.ArrayList<com.qq.jce.WCS.DockInfoElem> vecInfos, long lReleaseTime, long lUpdateLimit, int nEnablePeriod, int eDockInfoStatus, String sDockDesc, String sDockInvalidDesc, boolean bRollBack, String sTargetVersion)
    {
        this.stAdminRequestInfo = stAdminRequestInfo;
        this.mapUnit = mapUnit;
        this.vecInfos = vecInfos;
        this.lReleaseTime = lReleaseTime;
        this.lUpdateLimit = lUpdateLimit;
        this.nEnablePeriod = nEnablePeriod;
        this.eDockInfoStatus = eDockInfoStatus;
        this.sDockDesc = sDockDesc;
        this.sDockInvalidDesc = sDockInvalidDesc;
        this.bRollBack = bRollBack;
        this.sTargetVersion = sTargetVersion;
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        ModifyDockInfoRequest t = (ModifyDockInfoRequest) o;
        return (
            com.qq.taf.jce.JceUtil.equals(stAdminRequestInfo, t.stAdminRequestInfo) && 
            com.qq.taf.jce.JceUtil.equals(mapUnit, t.mapUnit) && 
            com.qq.taf.jce.JceUtil.equals(vecInfos, t.vecInfos) && 
            com.qq.taf.jce.JceUtil.equals(lReleaseTime, t.lReleaseTime) && 
            com.qq.taf.jce.JceUtil.equals(lUpdateLimit, t.lUpdateLimit) && 
            com.qq.taf.jce.JceUtil.equals(nEnablePeriod, t.nEnablePeriod) && 
            com.qq.taf.jce.JceUtil.equals(eDockInfoStatus, t.eDockInfoStatus) && 
            com.qq.taf.jce.JceUtil.equals(sDockDesc, t.sDockDesc) && 
            com.qq.taf.jce.JceUtil.equals(sDockInvalidDesc, t.sDockInvalidDesc) && 
            com.qq.taf.jce.JceUtil.equals(bRollBack, t.bRollBack) && 
            com.qq.taf.jce.JceUtil.equals(sTargetVersion, t.sTargetVersion) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(stAdminRequestInfo, 0);
        _os.write(mapUnit, 1);
        _os.write(vecInfos, 2);
        _os.write(lReleaseTime, 3);
        _os.write(lUpdateLimit, 4);
        _os.write(nEnablePeriod, 5);
        _os.write(eDockInfoStatus, 6);
        if (null != sDockDesc)
        {
            _os.write(sDockDesc, 7);
        }
        if (null != sDockInvalidDesc)
        {
            _os.write(sDockInvalidDesc, 8);
        }
        _os.write(bRollBack, 9);
        if (null != sTargetVersion)
        {
            _os.write(sTargetVersion, 10);
        }
    }

    static com.qq.jce.WCS.AdminRequest cache_stAdminRequestInfo;
    static java.util.Map<String, java.util.ArrayList<String>> cache_mapUnit;
    static java.util.ArrayList<com.qq.jce.WCS.DockInfoElem> cache_vecInfos;
    static int cache_eDockInfoStatus;

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        if(null == cache_stAdminRequestInfo)
        {
            cache_stAdminRequestInfo = new com.qq.jce.WCS.AdminRequest();
        }
        this.stAdminRequestInfo = (com.qq.jce.WCS.AdminRequest) _is.read(cache_stAdminRequestInfo, 0, true);
        if(null == cache_mapUnit)
        {
            cache_mapUnit = new java.util.HashMap<String, java.util.ArrayList<String>>();
            String __var_3 = "";
            java.util.ArrayList<String> __var_4 = new java.util.ArrayList<String>();
            String __var_5 = "";
            ((java.util.ArrayList<String>)__var_4).add(__var_5);
            cache_mapUnit.put(__var_3, __var_4);
        }
        this.mapUnit = (java.util.Map<String, java.util.ArrayList<String>>) _is.read(cache_mapUnit, 1, true);
        if(null == cache_vecInfos)
        {
            cache_vecInfos = new java.util.ArrayList<com.qq.jce.WCS.DockInfoElem>();
            com.qq.jce.WCS.DockInfoElem __var_6 = new com.qq.jce.WCS.DockInfoElem();
            ((java.util.ArrayList<com.qq.jce.WCS.DockInfoElem>)cache_vecInfos).add(__var_6);
        }
        this.vecInfos = (java.util.ArrayList<com.qq.jce.WCS.DockInfoElem>) _is.read(cache_vecInfos, 2, true);
        this.lReleaseTime = (long) _is.read(lReleaseTime, 3, false);
        this.lUpdateLimit = (long) _is.read(lUpdateLimit, 4, false);
        this.nEnablePeriod = (int) _is.read(nEnablePeriod, 5, false);
        this.eDockInfoStatus = (int) _is.read(eDockInfoStatus, 6, false);
        this.sDockDesc =  _is.readString(7, false);
        this.sDockInvalidDesc =  _is.readString(8, false);
        this.bRollBack = (boolean) _is.read(bRollBack, 9, false);
        this.sTargetVersion =  _is.readString(10, false);
    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(stAdminRequestInfo, "stAdminRequestInfo");
        _ds.display(mapUnit, "mapUnit");
        _ds.display(vecInfos, "vecInfos");
        _ds.display(lReleaseTime, "lReleaseTime");
        _ds.display(lUpdateLimit, "lUpdateLimit");
        _ds.display(nEnablePeriod, "nEnablePeriod");
        _ds.display(eDockInfoStatus, "eDockInfoStatus");
        _ds.display(sDockDesc, "sDockDesc");
        _ds.display(sDockInvalidDesc, "sDockInvalidDesc");
        _ds.display(bRollBack, "bRollBack");
        _ds.display(sTargetVersion, "sTargetVersion");
    }

    public void displaySimple(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.displaySimple(stAdminRequestInfo, true);
        _ds.displaySimple(mapUnit, true);
        _ds.displaySimple(vecInfos, true);
        _ds.displaySimple(lReleaseTime, true);
        _ds.displaySimple(lUpdateLimit, true);
        _ds.displaySimple(nEnablePeriod, true);
        _ds.displaySimple(eDockInfoStatus, true);
        _ds.displaySimple(sDockDesc, true);
        _ds.displaySimple(sDockInvalidDesc, true);
        _ds.displaySimple(bRollBack, true);
        _ds.displaySimple(sTargetVersion, false);
    }

}

